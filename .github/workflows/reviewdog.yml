name: reviewdog

on: [pull_request]

jobs:
  review:
    name: Run linters with reviewdog
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # TODO: 今後22系に上げたい

      - name: Setup reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest

      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run cspell
        run: npx cspell unix > cspell.txt || true
      - name: Reviewdog (cspell)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="cspell" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < cspell.txt

      - name: Run textlint
        run: npx textlint unix > textlint.txt || true
      - name: Reviewdog (textlint)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="textlint" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < textlint.txt

      - name: Run markdownlint
        run: npx markdownlint-cli2 "**/*.md" unix > markdownlint.txt || true
      - name: Reviewdog (markdownlint)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="markdownlint" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < markdownlint.txt

      - name: Run markuplint
        run: npx markuplint unix > markuplint.txt || true
      - name: Reviewdog (markuplint)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="markuplint" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < markuplint.txt

      - name: Run stylelint
        run: npx stylelint unix > stylelint.txt || true
      - name: Reviewdog (stylelint)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="stylelint" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < stylelint.txt

      - name: Run biome
        run: npx biome lint . \"**/*.{ts,tsx,js,jsx}\" unix > biome.txt || true
      - name: Reviewdog (biome)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="biome" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < biome.txt

      - name: Run axe-linter
        run: npx @axe-core/cli "**/*.html" --exit > axe.txt || true
      - name: Reviewdog (axe)
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          reviewdog -efm="%f:%l:%c %m" \
            -name="axe" \
            -reporter=github-pr-check \
            -level=warning \
            -filter-mode=file \
            -fail-on-error=false \
            < axe.txt
